package com.squashtrainingapp.ui.activities;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.RadioGroup;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.google.android.material.button.MaterialButton;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.SetOptions;
import com.squashtrainingapp.R;
import com.squashtrainingapp.SimpleMainActivity;
import com.squashtrainingapp.auth.FirebaseAuthManager;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GoalSettingActivity extends AppCompatActivity {
    
    private RadioGroup skillLevelGroup;
    private RadioGroup primaryGoalGroup;
    private SeekBar workoutFrequencySeekBar;
    private TextView frequencyText;
    private CheckBox checkBoxMorning, checkBoxAfternoon, checkBoxEvening;
    private MaterialButton continueButton;
    
    private FirebaseAuthManager authManager;
    private int selectedFrequency = 3;
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_goal_setting);
        
        authManager = FirebaseAuthManager.getInstance(this);
        
        initializeViews();
        setupListeners();
    }
    
    private void initializeViews() {
        // Back button
        findViewById(R.id.back_button).setOnClickListener(v -> finish());
        
        skillLevelGroup = findViewById(R.id.skill_level_group);
        primaryGoalGroup = findViewById(R.id.primary_goal_group);
        workoutFrequencySeekBar = findViewById(R.id.workout_frequency_seekbar);
        frequencyText = findViewById(R.id.frequency_text);
        checkBoxMorning = findViewById(R.id.checkbox_morning);
        checkBoxAfternoon = findViewById(R.id.checkbox_afternoon);
        checkBoxEvening = findViewById(R.id.checkbox_evening);
        continueButton = findViewById(R.id.continue_button);
        
        // Set default frequency
        workoutFrequencySeekBar.setProgress(selectedFrequency - 1);
        updateFrequencyText(selectedFrequency);
    }
    
    private void setupListeners() {
        workoutFrequencySeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                selectedFrequency = progress + 1;
                updateFrequencyText(selectedFrequency);
            }
            
            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {}
            
            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {}
        });
        
        continueButton.setOnClickListener(v -> saveGoalsAndContinue());
    }
    
    private void updateFrequencyText(int frequency) {
        frequencyText.setText("주 " + frequency + "회");
    }
    
    private void saveGoalsAndContinue() {
        // Validate selections
        if (skillLevelGroup.getCheckedRadioButtonId() == -1) {
            Toast.makeText(this, "실력 수준을 선택해주세요", Toast.LENGTH_SHORT).show();
            return;
        }
        
        if (primaryGoalGroup.getCheckedRadioButtonId() == -1) {
            Toast.makeText(this, "주요 목표를 선택해주세요", Toast.LENGTH_SHORT).show();
            return;
        }
        
        if (!checkBoxMorning.isChecked() && !checkBoxAfternoon.isChecked() && !checkBoxEvening.isChecked()) {
            Toast.makeText(this, "선호하는 운동 시간을 최소 하나 선택해주세요", Toast.LENGTH_SHORT).show();
            return;
        }
        
        // Get selected values
        String skillLevel = getSkillLevel();
        String primaryGoal = getPrimaryGoal();
        List<String> preferredTimes = getPreferredTimes();
        
        // Save to Firestore
        FirebaseUser user = authManager.getCurrentUser();
        if (user != null) {
            Map<String, Object> goals = new HashMap<>();
            goals.put("skillLevel", skillLevel);
            goals.put("primaryGoal", primaryGoal);
            goals.put("workoutFrequency", selectedFrequency);
            goals.put("preferredTimes", preferredTimes);
            goals.put("goalsSetAt", System.currentTimeMillis());
            
            authManager.updateUserProfile(user.getUid(), goals, task -> {
                if (task.isSuccessful()) {
                    // Save locally for quick access
                    getSharedPreferences("user_goals", MODE_PRIVATE)
                            .edit()
                            .putString("skillLevel", skillLevel)
                            .putString("primaryGoal", primaryGoal)
                            .putInt("workoutFrequency", selectedFrequency)
                            .apply();
                    
                    // Navigate to main activity
                    Intent intent = new Intent(this, SimpleMainActivity.class);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity(intent);
                    overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
                    finish();
                } else {
                    Toast.makeText(this, "목표 저장 실패. 다시 시도해주세요.", Toast.LENGTH_SHORT).show();
                }
            });
        } else {
            // If no user (shouldn't happen), continue anyway
            Intent intent = new Intent(this, SimpleMainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            startActivity(intent);
            finish();
        }
    }
    
    private String getSkillLevel() {
        int checkedId = skillLevelGroup.getCheckedRadioButtonId();
        if (checkedId == R.id.radio_beginner) return "beginner";
        if (checkedId == R.id.radio_intermediate) return "intermediate";
        if (checkedId == R.id.radio_advanced) return "advanced";
        return "beginner";
    }
    
    private String getPrimaryGoal() {
        int checkedId = primaryGoalGroup.getCheckedRadioButtonId();
        if (checkedId == R.id.radio_fitness) return "fitness";
        if (checkedId == R.id.radio_technique) return "technique";
        if (checkedId == R.id.radio_competition) return "competition";
        if (checkedId == R.id.radio_fun) return "fun";
        return "fitness";
    }
    
    private List<String> getPreferredTimes() {
        List<String> times = new ArrayList<>();
        if (checkBoxMorning.isChecked()) times.add("morning");
        if (checkBoxAfternoon.isChecked()) times.add("afternoon");
        if (checkBoxEvening.isChecked()) times.add("evening");
        return times;
    }
}